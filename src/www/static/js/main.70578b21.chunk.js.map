{"version":3,"sources":["svg/logo.svg","svg/stork.svg","components/Button.js","components/DatePicker.js","components/Spinner.js","components/ChartItem.js","components/ResultsPane.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onClick","text","DatePicker","type","onChange","Spinner","ChartItem","artist","title","testHitsData","key","ResultsPane","useState","isCancelledRequest","setIsCancelledRequest","hitsData","setHitsData","isTimeoutComplete","setIsTimeoutComplete","dateTimestamp","Date","parse","date","dayOfWeek","getDay","getBirthdayDayOfWeek","chineseZodiak","getFullYear","getChineseZodiak","randomMessages","Math","floor","random","length","getRandomQuirkyMessage","quirkyMessage","getRandomWaitMessage","waitMessage","useEffect","a","setTimeout","console","log","getHits","waitTimer","clearTimeout","map","hit","toggleMainContentAction","App","showResultsPane","setShowResultsPane","birthday","setBirthday","toggleSearchHits","handleDateChange","e","target","value","src","logo","alt","style","marginBottom","stork","showMainContents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70578b21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7c58a342.svg\";","export default __webpack_public_path__ + \"static/media/stork.78d6243d.svg\";","import '../css/Button.css';\n\nfunction Button(props) {\n  return (\n    <button className=\"Button\" onClick={props.onClick}>{props.text}</button>\n  );\n}\n\nexport default Button;\n","import '../css/DatePicker.css';\n\nfunction DatePicker(props) {\n  return (\n    <input className=\"DatePicker-input\" type=\"date\" onChange={props.onChange} />\n  );\n}\n\nexport default DatePicker;\n","import '../css/Spinner.css';\n\nfunction Spinner(props) {\n  return (\n    <div className=\"Spinner-heart\"><div></div></div>\n  );\n}\n\nexport default Spinner;\n","import '../css/ChartItem.css';\n\nfunction ChartItem(props) {\n  return (\n    <div className=\"ChartItem-Container\">\n      <div className=\"ChartItem\">\n        {props.artist} - {props.title}\n      </div>\n    </div>\n  );\n}\n\nexport default ChartItem;\n","import '../css/ResultsPane.css';\nimport Button from './Button.js';\nimport Spinner from './Spinner.js';\nimport ChartItem from './ChartItem.js';\nimport { useState, useEffect } from 'react';\n\nconst testHitsData = [\n  { key: '1', 'title': 'Hit 1', 'artist': 'Artist 1' },\n  { key: '2', 'title': 'Hit 2', 'artist': 'Artist 2' },\n  { key: '3', 'title': 'Hit 3', 'artist': 'Artist 3' }\n];\n\nfunction ResultsPane(props) {\n  const [isCancelledRequest, setIsCancelledRequest] = useState(false);\n  const [hitsData, setHitsData] = useState(null);\n  const [isTimeoutComplete, setIsTimeoutComplete] = useState(false);\n  // const [isMounted, setIsMounted] = useState(false);\n  // const [ready, setReady] = useState(false);\n\n  const minimumResultsPaneTimeout = 4000;\n  const simulatedAPIRequestDelay = 2000;\n  const dateTimestamp = Date.parse(props.date);\n  const date = new Date(dateTimestamp);\n\n  const getBirthdayDayOfWeek = (date) => {\n    const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    return weekdays[date.getDay()];\n  }\n\n  const getChineseZodiak = (date) => {\n    const signs = ['monkey', 'rooster', 'dog', 'pig', 'rat', 'ox', 'tiger', 'rabbit', 'dragon', 'snake', 'horse', 'sheep'];\n    return signs[date.getFullYear() % 12];\n  }\n\n  const getRandomQuirkyMessage = () => {\n    const randomMessages = ['Your hits are almost here!', 'A fine year, I must say!', 'Great year for fine wines everywhere!',\n      'Beautiful year, I can feel it!', 'Now what were your parents listening to?', 'I can tell we\\'re in for some fine tunes!',\n      'A great year for music!', 'I can already feel the beat!'];\n    return randomMessages[Math.floor(Math.random() * randomMessages.length)];\n  }\n\n  const getRandomWaitMessage = () => {\n    const randomMessages = ['Stick around, we\\'re getting your results...', 'Please wait, we\\'re fetching your hits...',\n      'One moment, please...', 'Almost there...'];\n    return randomMessages[Math.floor(Math.random() * randomMessages.length)];\n  }\n\n  const dayOfWeek = getBirthdayDayOfWeek(date);\n  const chineseZodiak = getChineseZodiak(date);\n  // const quirkyMessage = getRandomQuirkyMessage();\n  // const waitMessage = getRandomWaitMessage();\n\n  const [quirkyMessage] = useState(getRandomQuirkyMessage());\n  const [waitMessage] = useState(getRandomWaitMessage());\n\n  // useEffect(() => {\n  //   setIsMounted(true);\n  //   return () => { setIsMounted(false); }\n  // }, []);\n\n  useEffect(() => {\n    // async function getHits() {\n    //   await\n    //     Promise.all([new Promise(resolve => {\n    //       setTimeout(() => {\n    //         console.log(\"Madatory timeout complete\");\n    //         resolve();\n    //       }, minimumResultsPaneTimeout);\n    //     }),\n    //     new Promise(resolve => {\n    //       setTimeout(() => {\n    //         setHitsData(testHitsData);\n    //         console.log(\"Retrieving data...\");\n    //         resolve();\n    //       }, 2000);\n    //     })]);\n    // }\n\n    async function getHits() {\n      setTimeout(() => {\n        console.log(\"Retrieving data...\");\n        setHitsData(testHitsData);\n      }, simulatedAPIRequestDelay);\n    }\n\n    getHits();\n\n    // const hitsTimer = setTimeout(() => {\n    //   console.log(\"Retrieving data...\");\n    //   setHitsData(testHitsData);\n    // }, simulatedAPIRequestDelay);\n\n    // return () => clearTimeout(hitsTimer);\n  }, []);\n\n  useEffect(() => {\n    // async function startTimeout() {\n    //   setTimeout(() => {\n    //     console.log(\"Madatory timeout complete\");\n    //     setIsTimeoutComplete();\n    //   }, minimumResultsPaneTimeout);\n    // }\n\n    // startTimeout();\n\n    const waitTimer = setTimeout(() => {\n      console.log(\"Mandatory timeout complete\");\n      setIsTimeoutComplete(true);\n    }, minimumResultsPaneTimeout);\n\n    return () => clearTimeout(waitTimer);\n  }, []);\n\n  return isCancelledRequest || (hitsData && isTimeoutComplete) ? ( // !isCancelledRequest && !hitsData\n    <div>\n      {testHitsData.map((hit) => <ChartItem key={hit.key} title={hit.title} artist={hit.artist} />)}\n      <Button onClick={() => { props.toggleMainContentAction(); }} text=\"Do another one!\" />\n    </div>\n  ) : (\n    <div>\n      <Spinner />\n      <div className=\"ResultsPane-contents\">\n        Born on a {dayOfWeek}, the year of the {chineseZodiak}...\n        <br />\n        {quirkyMessage} {waitMessage}\n      </div>\n      <br />\n      <Button onClick={() => { setIsCancelledRequest(true); props.toggleMainContentAction(); }} text=\"Cancel\" />\n    </div>\n  );\n}\n\nexport default ResultsPane;\n","import logo from './svg/logo.svg';\nimport stork from './svg/stork.svg';\nimport Button from './components/Button.js';\nimport DatePicker from './components/DatePicker.js';\nimport './App.css';\nimport { useState } from 'react';\nimport ResultsPane from './components/ResultsPane';\n\nconst App = () => {\n  const [showResultsPane, setShowResultsPane] = useState(false);\n  const [birthday, setBirthday] = useState();\n\n  const toggleSearchHits = () => {\n    // Show results pane only if birthday field has been filled in\n    if (birthday) {\n      setShowResultsPane(!showResultsPane);\n    }\n\n    // Clear birthday on return from the results pane\n    if (birthday && showResultsPane) {\n      setBirthday(null);\n    }\n  }\n\n  const handleDateChange = (e) => {\n    setBirthday(e.target.value);\n  }\n\n  const showMainContents = (showResultsPane) => {\n    if (!showResultsPane) {\n      return (\n        <div className=\"App-layout\">\n          <div className=\"App-logo-left\">\n            <img src={logo} className=\"App-logo\" alt=\"StorkFM\" />\n            <div style={{ marginBottom: \"20px\" }}>\n              <DatePicker onChange={handleDateChange} />\n            </div>\n            <Button text=\"Hit me!\" onClick={toggleSearchHits} />\n          </div>\n          <div className=\"App-logo-right\">\n            <img src={stork} className=\"App-stork\" alt=\"Stork\" />\n          </div>\n        </div>\n      );\n    }\n\n    return <ResultsPane toggleMainContentAction={toggleSearchHits} date={birthday} />;\n  }\n\n  return (\n    <div className=\"App\">\n      {showMainContents(showResultsPane)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}